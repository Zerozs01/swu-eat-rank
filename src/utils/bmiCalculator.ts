import type { UserProfile, BMIInfo } from '../types/menu';

// Calculate BMI from height (cm) and weight (kg)
export function calculateBMI(height?: number, weight?: number): number | null {
  if (!height || !weight || height <= 0 || weight <= 0) {
    return null;
  }

  const heightInMeters = height / 100;
  return Math.round((weight / (heightInMeters * heightInMeters)) * 100) / 100;
}

// Get BMI category and related information
export function getBMIInfo(bmi: number): BMIInfo {
  if (bmi < 18.5) {
    return {
      value: bmi,
      category: 'underweight',
      categoryTH: '‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏Å‡∏ì‡∏ë‡πå',
      description: '‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û ‡∏≠‡∏≤‡∏à‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ï‡πà‡∏≠‡∏†‡∏≤‡∏ß‡∏∞‡πÇ‡∏†‡∏ä‡∏ô‡∏≤‡∏Å‡∏≤‡∏£‡∏ö‡∏Å‡∏û‡∏£‡πà‡∏≠‡∏á',
      color: 'text-blue-600 bg-blue-50 border-blue-200',
      icon: 'üìâ',
      healthRisks: [
        '‡∏†‡∏≤‡∏ß‡∏∞‡πÇ‡∏†‡∏ä‡∏ô‡∏≤‡∏Å‡∏≤‡∏£‡∏ö‡∏Å‡∏û‡∏£‡πà‡∏≠‡∏á',
        '‡∏†‡∏π‡∏°‡∏¥‡∏Ñ‡∏∏‡πâ‡∏°‡∏Å‡∏±‡∏ô‡∏ï‡πà‡∏≥',
        '‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡πâ‡∏≥‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á‡∏≠‡πà‡∏≠‡∏ô‡πÅ‡∏≠',
        '‡∏ú‡∏¥‡∏ß‡∏´‡∏ô‡∏±‡∏á‡πÅ‡∏´‡πâ‡∏á',
        '‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡πÄ‡∏ä‡∏∑‡πâ‡∏≠'
      ],
      recommendations: [
        '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÇ‡∏õ‡∏£‡∏ï‡∏µ‡∏ô‡∏™‡∏π‡∏á',
        '‡∏ó‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö 5 ‡∏´‡∏°‡∏π‡πà',
        '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á gradual ‡πÇ‡∏î‡∏¢‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà',
        '‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏•‡πâ‡∏≤‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠',
        '‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÇ‡∏†‡∏ä‡∏ô‡∏≤‡∏Å‡∏£‡∏´‡∏≤‡∏Å‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô'
      ]
    };
  } else if (bmi < 25) {
    return {
      value: bmi,
      category: 'normal',
      categoryTH: '‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏õ‡∏Å‡∏ï‡∏¥',
      description: '‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏î‡∏µ',
      color: 'text-green-600 bg-green-50 border-green-200',
      icon: '‚úÖ',
      healthRisks: [],
      recommendations: [
        '‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô',
        '‡∏Å‡∏¥‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢',
        '‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏™‡∏°‡πà‡∏≥‡πÄ‡∏™‡∏°‡∏≠',
        '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏õ‡∏µ'
      ]
    };
  } else if (bmi < 30) {
    return {
      value: bmi,
      category: 'overweight',
      categoryTH: '‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô',
      description: '‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå ‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏∂‡∏á‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏≠‡πâ‡∏ß‡∏ô',
      color: 'text-yellow-600 bg-yellow-50 border-yellow-200',
      icon: '‚ö†Ô∏è',
      healthRisks: [
        '‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ï‡πà‡∏≠‡πÇ‡∏£‡∏Ñ‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô‡∏ä‡∏ô‡∏¥‡∏î‡∏ó‡∏µ‡πà 2',
        '‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ï‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÇ‡∏•‡∏´‡∏¥‡∏ï‡∏™‡∏π‡∏á',
        '‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏Ç‡∏°‡∏±‡∏ô‡πÉ‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏™‡∏π‡∏á',
        '‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ï‡πà‡∏≠‡πÇ‡∏£‡∏Ñ‡∏´‡∏±‡∏ß‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏´‡∏•‡∏≠‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î'
      ],
      recommendations: [
        '‡∏•‡∏î‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÅ‡∏õ‡∏£‡∏£‡∏π‡∏õ‡πÅ‡∏•‡∏∞‡∏Ç‡∏≠‡∏á‡∏´‡∏ß‡∏≤‡∏ô',
        '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏ú‡∏•‡πÑ‡∏°‡πâ‡πÉ‡∏ô‡∏°‡∏∑‡πâ‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£',
        '‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 150 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏ï‡πà‡∏≠‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå',
        '‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏≠‡∏≤‡∏´‡∏≤‡∏£',
        '‡∏î‡∏∑‡πà‡∏°‡∏ô‡πâ‡∏≥‡∏°‡∏≤‡∏Å‡πÜ'
      ]
    };
  } else if (bmi < 35) {
    return {
      value: bmi,
      category: 'obese',
      categoryTH: '‡∏≠‡πâ‡∏ß‡∏ô',
      description: '‡∏≠‡πâ‡∏ß‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö 1 ‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ï‡πà‡∏≠‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á',
      color: 'text-orange-600 bg-orange-50 border-orange-200',
      icon: 'üö®',
      healthRisks: [
        '‡πÇ‡∏£‡∏Ñ‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô‡∏ä‡∏ô‡∏¥‡∏î‡∏ó‡∏µ‡πà 2',
        '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÇ‡∏•‡∏´‡∏¥‡∏ï‡∏™‡∏π‡∏á',
        '‡πÇ‡∏£‡∏Ñ‡∏´‡∏±‡∏ß‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏´‡∏•‡∏≠‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î',
        '‡πÇ‡∏£‡∏Ñ‡πÑ‡∏ï',
        '‡πÇ‡∏£‡∏Ñ‡∏Ç‡πâ‡∏≠‡∏≠‡∏±‡∏Å‡πÄ‡∏™‡∏ö',
        '‡∏†‡∏≤‡∏ß‡∏∞‡∏´‡∏¢‡∏∏‡∏î‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡∏Ç‡∏ì‡∏∞‡∏´‡∏•‡∏±‡∏ö'
      ],
      recommendations: [
        '‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÅ‡∏û‡∏ó‡∏¢‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏î‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å',
        '‡∏•‡∏î‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà‡∏•‡∏á 500-1000 ‡∏Å‡∏¥‡πÇ‡∏•‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô',
        '‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 300 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏ï‡πà‡∏≠‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå',
        '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ñ‡∏≤‡∏ß‡∏£',
        '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏õ‡∏µ'
      ]
    };
  } else {
    return {
      value: bmi,
      category: 'severely_obese',
      categoryTH: '‡∏≠‡πâ‡∏ß‡∏ô‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á',
      description: '‡∏≠‡πâ‡∏ß‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö 2 ‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ï‡πà‡∏≠‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á‡∏°‡∏≤‡∏Å',
      color: 'text-red-600 bg-red-50 border-red-200',
      icon: 'üÜò',
      healthRisks: [
        '‡πÇ‡∏£‡∏Ñ‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô‡∏ä‡∏ô‡∏¥‡∏î‡∏ó‡∏µ‡πà 2 (‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏™‡∏π‡∏á‡∏°‡∏≤‡∏Å)',
        '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÇ‡∏•‡∏´‡∏¥‡∏ï‡∏™‡∏π‡∏á‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á',
        '‡πÇ‡∏£‡∏Ñ‡∏´‡∏±‡∏ß‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏´‡∏•‡∏≠‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î (‡∏£‡∏ß‡∏°‡∏ñ‡∏∂‡∏á‡∏´‡∏±‡∏ß‡πÉ‡∏à‡∏ß‡∏≤‡∏¢)',
        '‡πÇ‡∏£‡∏Ñ‡πÑ‡∏ï‡∏ß‡∏≤‡∏¢‡πÄ‡∏£‡∏∑‡πâ‡∏≠‡∏£‡∏±‡∏á',
        '‡πÇ‡∏£‡∏Ñ‡∏ï‡∏±‡∏ö‡∏≠‡πâ‡∏ß‡∏ô',
        '‡∏°‡∏∞‡πÄ‡∏£‡πá‡∏á‡∏ö‡∏≤‡∏á‡∏ä‡∏ô‡∏¥‡∏î',
        '‡∏†‡∏≤‡∏ß‡∏∞‡∏´‡∏¢‡∏∏‡∏î‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á'
      ],
      recommendations: [
        '‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏à‡∏≤‡∏Å‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏ó‡∏±‡∏ô‡∏ó‡∏µ',
        '‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏•‡∏î‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏†‡∏≤‡∏¢‡πÉ‡∏ï‡πâ‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏Ç‡∏≠‡∏á‡πÅ‡∏û‡∏ó‡∏¢‡πå',
        '‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÅ‡∏ö‡∏ö‡∏´‡∏•‡∏≤‡∏¢‡∏™‡∏≤‡∏Ç‡∏≤',
        '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢',
        '‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÅ‡∏ö‡∏ö‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏ä‡∏¥‡πâ‡∏ô‡∏™‡πà‡∏ß‡∏ô'
      ]
    };
  }
}

// Calculate ideal weight range based on height
export function getIdealWeightRange(height: number): { min: number; max: number } {
  const heightInMeters = height / 100;
  const minWeight = Math.round(18.5 * heightInMeters * heightInMeters);
  const maxWeight = Math.round(24.9 * heightInMeters * heightInMeters);
  return { min: minWeight, max: maxWeight };
}

// Calculate daily calorie needs based on profile
export function calculateDailyCalories(profile: UserProfile): number | null {
  if (!profile.age || !profile.weight || !profile.height || !profile.gender) {
    return null;
  }

  // Harris-Benedict equation for BMR
  let bmr: number;
  if (profile.gender === 'male') {
    bmr = 88.362 + (13.397 * profile.weight) + (4.799 * profile.height) - (5.677 * profile.age);
  } else {
    bmr = 447.593 + (9.247 * profile.weight) + (3.098 * profile.height) - (4.330 * profile.age);
  }

  // Activity factor
  const activityFactors = {
    sedentary: 1.2,
    lightly_active: 1.375,
    moderately_active: 1.55,
    very_active: 1.725,
    extremely_active: 1.9
  };

  const activityFactor = activityFactors[profile.activityLevel || 'sedentary'];
  return Math.round(bmr * activityFactor);
}

// Validate profile data
export function validateProfile(profile: UserProfile): { isValid: boolean; errors: string[] } {
  const errors: string[] = [];

  if (profile.height && (profile.height < 100 || profile.height > 250)) {
    errors.push('‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 100-250 ‡∏ã‡∏°.');
  }

  if (profile.weight && (profile.weight < 20 || profile.weight > 300)) {
    errors.push('‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 20-300 ‡∏Å‡∏Å.');
  }

  if (profile.age && (profile.age < 10 || profile.age > 120)) {
    errors.push('‡∏≠‡∏≤‡∏¢‡∏∏‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 10-120 ‡∏õ‡∏µ');
  }

  return {
    isValid: errors.length === 0,
    errors
  };
}

// Save profile to local storage (for demo purposes)
export function saveProfileToStorage(userId: string, profile: UserProfile): void {
  try {
    const storageKey = `user_profile_${userId}`;
    localStorage.setItem(storageKey, JSON.stringify({
      ...profile,
      updatedAt: Date.now()
    }));
  } catch (error) {
    console.error('Failed to save profile:', error);
  }
}

// Load profile from local storage (for demo purposes)
export function loadProfileFromStorage(userId: string): UserProfile | null {
  try {
    const storageKey = `user_profile_${userId}`;
    const stored = localStorage.getItem(storageKey);
    return stored ? JSON.parse(stored) : null;
  } catch (error) {
    console.error('Failed to load profile:', error);
    return null;
  }
}

// Get weight change recommendations
export function getWeightChangeRecommendations(currentBMI: number, targetBMI: number, profile: UserProfile): {
  action: 'lose' | 'gain' | 'maintain';
  targetWeight: number;
  weeklyChange: number;
  timeframe: string;
  advice: string[];
} {
  const targetWeight = Math.round(targetBMI * Math.pow((profile.height || 170) / 100, 2));
  const currentWeight = profile.weight || 70;
  const weightDifference = targetWeight - currentWeight;

  if (Math.abs(weightDifference) < 1) {
    return {
      action: 'maintain',
      targetWeight,
      weeklyChange: 0,
      timeframe: '‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô',
      advice: ['‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô', '‡∏Å‡∏¥‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢', '‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏™‡∏°‡πà‡∏≥‡πÄ‡∏™‡∏°‡∏≠']
    };
  }

  // Safe weight change: 0.5-1 kg per week
  const weeklyChange = Math.min(Math.max(weightDifference / 12, -1), 1); // 12 weeks target
  const weeks = Math.abs(Math.round(weightDifference / weeklyChange));
  const timeframe = weeks > 52 ? `${Math.round(weeks / 52)} ‡∏õ‡∏µ` : `${weeks} ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå`;

  const action = weightDifference < 0 ? 'lose' : 'gain';
  const advice = action === 'lose' ? [
    '‡∏•‡∏î‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà‡∏•‡∏á 300-500 ‡∏Å‡∏¥‡πÇ‡∏•‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô',
    '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡πÅ‡∏ö‡∏ö‡πÅ‡∏≠‡πÇ‡∏£‡∏ö‡∏¥‡∏Å',
    '‡∏•‡∏î‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏≠‡∏î‡πÅ‡∏•‡∏∞‡∏Ç‡∏≠‡∏á‡∏´‡∏ß‡∏≤‡∏ô',
    '‡∏î‡∏∑‡πà‡∏°‡∏ô‡πâ‡∏≥‡∏°‡∏≤‡∏Å‡πÜ'
  ] : [
    '‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà 300-500 ‡∏Å‡∏¥‡πÇ‡∏•‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô',
    '‡∏ó‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÇ‡∏õ‡∏£‡∏ï‡∏µ‡∏ô‡∏™‡∏π‡∏á‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏°‡∏∑‡πâ‡∏≠',
    '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡πÅ‡∏ö‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á',
    '‡∏ó‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Ñ‡∏£‡∏ö 5 ‡∏´‡∏°‡∏π‡πà'
  ];

  return {
    action,
    targetWeight,
    weeklyChange,
    timeframe,
    advice
  };
}