rules_version = '2';
service cloud.firestore {
  match /databases/{db}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    match /menus/{id} {
      allow read: if true;       // public
      allow write: if true;      // อนุญาตการเขียนสำหรับ seed
    }

    match /logs/{id} {
      allow create: if isSignedIn()
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.visibility in ['public','private'];
      allow read: if isSignedIn()
        && (resource.data.userId == request.auth.uid || resource.data.visibility == 'public');
      allow update: if isSignedIn()
        && resource.data.userId == request.auth.uid
        && request.resource.data.visibility in ['public','private']
        && request.resource.data.userId == resource.data.userId; // เจ้าของเท่านั้นที่แก้ไขได้
      allow delete: if isSignedIn()
        && resource.data.userId == request.auth.uid; // ให้ลบได้เฉพาะของตัวเอง
    }

    match /users/{id} {
      allow read, write: if isSignedIn() && request.auth.uid == id;
    }

    // aggregates: อ่านได้ทั้งหมด เขียนเฉพาะ CF/admin
    match /aggregates/{id} {
      allow read: if true;
      allow write: if false;
    }

    // admin users: เฉพาะ owner เท่านั้นที่จัดการได้
    match /adminUsers/{email} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && request.auth.token.email == 'auandmaxma@gmail.com';
    }

    // admin whitelist: เฉพาะ owner เท่านั้นที่จัดการได้
    match /admin/{id} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && request.auth.token.email == 'auandmaxma@gmail.com';
    }
  }
}
